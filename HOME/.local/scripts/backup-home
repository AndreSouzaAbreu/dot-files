#!/bin/sh
tmp_folder=/tmp/home-backup

function throw_error()
{
  echo "$@"
  exit 1
}

# filter git repos from list of files
function filter_git_repos()
{
  local files_list=${1:-/dev/stdin}
  local git_repos=${tmp_folder}/git-repos.txt
  local filtered_list=${tmp_folder}/git-filtered-list.txt
  local swap_file=${tmp_folder}/git-swap-file.txt

  tee $filtered_list < $files_list 1>/dev/null
  grep -P '\.git$' < $filtered_list > $git_repos
  
  while read line; do
    dir=${line/\/.git/}
    grep -v "${dir}" $filtered_list > $swap_file
    mv $swap_file $filtered_list
  done < $git_repos

  cat $filtered_file_list
}

# filter cache files
function filter_cache()
{
  local files_list=${1:-/dev/stdin}
  ignored_cache="npm|yay|pip|go-build|clipmenu|qutebrowser|chromium|sxiv|thumbnails|typescript|jedi|fontconfig"
  ignored_share="qutebrowser|chromium|jupyter"
  grep -v -P ".cache/($ignored_cache)" < $files_list |
    grep -v -P 'config/coc' |
    grep -v -P "share/($ignored_share)" >&1
}

# get files to back up
function get_files()
{
  # find $HOME | filter_git_repos | filter_cache >&1
  find $HOME | filter_git_repos >&1
}

# function compress_files()
# {


# }

# function encrpypt_files()
# {


# }

function main()
{
  mkdir -p $tmp_folder
  get_files >&1
  exit 0
}

main $@
