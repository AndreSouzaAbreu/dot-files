" ---------------------------------------------------------------------------
" KEYBINDINGS
" ---------------------------------------------------------------------------

" the leader key
let mapleader=","

" do nothing when pressing space or \ twice
nnoremap <space> <nop>
nnoremap <Bslash><Bslash> <Nop>

" ---------------------------------------------------------------------------
" BUFFERS
" ---------------------------------------------------------------------------

" buffer navigation keybindings
nnoremap <Bslash>bn :bn<CR>
nnoremap <Bslash>bp :bp<CR>
nnoremap <Bslash>bd :bd<CR>
nnoremap <M-1> :bp<CR>
nnoremap <M-2> :bn<CR>
nnoremap gb :b<space>

" close and save file easily
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>a :qall!<CR>

" ---------------------------------------------------------------------------
" WINDOW
" ---------------------------------------------------------------------------

" window split
nnoremap <leader>v <C-w>v
nnoremap <leader>s <C-w>s

" window resize
nnoremap <silent> <M-S-j> :resize -5<cr>
nnoremap <silent> <M-S-k> :resize +5<cr>
nnoremap <silent> <M-S-h> :vertical resize -5<cr>
nnoremap <silent> <M-S-l> :vertical resize +5<cr>

" window navigation
nnoremap <M-h> <C-W>h
nnoremap <M-j> <C-W>j
nnoremap <M-k> <C-W>k
nnoremap <M-l> <C-W>l

" ---------------------------------------------------------------------------
" TERMINAL
" ---------------------------------------------------------------------------

" resize terminal
tnoremap <silent> <C-[> <C-w>:resize +1<CR>
tnoremap <silent> <C-]> <C-w>:resize -1<CR>

" turn the terminal into a normal buffer
tnoremap <silent> <Esc> <C-w><S-n>:set nonumber norelativenumber<CR>

" toggle terminal
nnoremap <silent> <A-s> :call TgtToggleH()<CR>
tnoremap <silent> <A-s> <C-w><S-n>:call TerminalToggle()<CR>

" ---------------------------------------------------------------------------
" CLIPBOARD
" ---------------------------------------------------------------------------

" paste from clipboard in insert mode
inoremap <C-S-v> <esc>"+pi

" copy, paste, and cut t clipboard in visual mode
vnoremap <Bslash>c "+y<CR>
vnoremap <Bslash>x "+d<CR>
vnoremap <Bslash>v "+p<CR>

" ---------------------------------------------------------------------------
" MISCELLANEOUS
" ---------------------------------------------------------------------------

" map ç to :
nnoremap çç :
nnoremap ç :
vnoremap ç :

" source vimrc
nnoremap <leader>S :source $vimrc<CR>

" clear highlight from previous searc
nnoremap <silent> <Bslash>l :noh<CR>

" search and replace word under cursor
nnoremap <space>w :%s/<C-r><C-w>/

" move lines up/down without using clipboard
nnoremap <M-o> :m .-2<CR>==
nnoremap <M-i> :m .+1<CR>==
vnoremap <M-i> :m '>+1<CR>gv=gv
vnoremap <M-o> :m '<-2<CR>gv=gv

" navigate between methods of a class
nnoremap <Bslash>, ]m
nnoremap <Bslash>. [m

" toggle line wrap
nnoremap <M-w> :set wrap!<CR>

" toggle display of invisible chars
nnoremap <silent> <leader>l :set list!<CR>

" toggle line numbers
nnoremap <silent> <Bslash>n :set number! relativenumber!<CR>

" toggle automatic comments on new lines
nnoremap <leader>c :set formatoptions=ql<CR>
nnoremap <leader>C :set formatoptions=qlcro<CR>

" jump to mark then jump to the file
" whose name is under the cursor
let c='a'
while c <= 'z'
	exec "nnoremap ç".c." `".c."gf"
	let c = nr2char(1+char2nr(c))
endwhile
let c='A'
while c <= 'A'
	exec "nnoremap ç".c." `".c."gf"
	let c = nr2char(1+char2nr(c))
endwhile

" ---------------------------------------------------------------------------
" TABS
" ---------------------------------------------------------------------------

" close/open tabs
nnoremap ,t :tabnew<CR>
nnoremap ,T :tabc<CR>

" ---------------------------------------------------------------------------
" PLUGINS 
" ---------------------------------------------------------------------------

" COC (CONQUER OF COMPLETION) -----------------------------------------------

" enable/disable coc
noremap <Bslash>c :CocDisable<Esc>
noremap <Bslash>C :CocEnable<Esc>

" go to definitions
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> ,gi <Plug>(coc-implementation)
nmap <silent> ,gr <Plug>(coc-references)

" Use `[g` and `]g` to navigate diagnostics
nmap <silent> [g <Plug>(coc-diagnostic-prev)
nmap <silent> ]g <Plug>(coc-diagnostic-next)

" toggle explorer
nmap <silent> ,d :CocCommand explorer --toggle --sources=buffer+,file+<cr>
nmap <silent> ,ev :CocCommand explorer --preset vim<cr>
nmap <silent> ,en :CocCommand explorer --preset nvim<cr>
nmap <silent> ,esh :CocCommand explorer --preset shell<cr>
nmap <silent> ,esc :CocCommand explorer --preset scripts<cr>

" EASY ALIGN ----------------------------------------------------------------

" interactive EasyAlign in visual mode
xmap gA <Plug>(EasyAlign)

" interactive EasyAlign for a motion text object
nmap gA <Plug>(EasyAlign)

" FZF -----------------------------------------------------------------------

" open new file
nnoremap <leader>f :FZF<CR>

" NETRW ---------------------------------------------------------------------

" toggle file explorer
" nnoremap <leader>d :Lexplore<CR>

" NEOTERM -------------------------------------------------------------------

" Use gx{text-object} in normal mode
nmap ,r <Plug>(neoterm-repl-send)
nmap ,R :TREPLSendFile<CR>
nmap ,rr :TREPLSendLine<CR>

" Send selected contents in visual mode.
xmap ,r <Plug>(neoterm-repl-send)

" STARTFIY ------------------------------------------------------------------

" go to home page
nnoremap <Bslash>h :Startify<CR>

" TAGBAR --------------------------------------------------------------------

" toggle tag bar
nnoremap <Bslash>t :TagbarToggle<CR>
